# Cache Configuration Example
# Copy this to your application.yml and customize as needed

my-base:
  cache:
    redis:
      enabled: true
      host: localhost
      port: 6379
      password: "${REDIS_PASSWORD:}"
      database: 0
      connection-timeout: 5s
      read-timeout: 3s
      write-timeout: 3s
      max-connections: 8
      max-idle-connections: 8
      max-idle-time: 10m
      max-life-time: 1h
      enable-ssl: false
      key-prefix: "my-base:"
      default-ttl: 1h
      enable-compression: false
      compression-threshold: 1024
    
    caffeine:
      enabled: true
      maximum-size: 10000
      expire-after-write: 1h
      expire-after-access: 30m
      refresh-after-write: 15m
      record-stats: true
      weak-keys: false
      weak-values: false
      soft-values: false
      caches:
        user-cache:
          maximum-size: 1000
          expire-after-write: 2h
          expire-after-access: 1h
          refresh-after-write: 30m
        product-cache:
          maximum-size: 5000
          expire-after-write: 4h
          expire-after-access: 2h
          refresh-after-write: 1h
        order-cache:
          maximum-size: 2000
          expire-after-write: 30m
          expire-after-access: 15m
          refresh-after-write: 10m
    
    hazelcast:
      enabled: false
      instance-name: "my-base-hazelcast"
      port: 5701
      port-count: 100
      port-auto-increment: true
      group-name: "my-base"
      group-password: "my-base-pass"
      connection-timeout: 5s
      operation-timeout: 30s
      max-connections: 100
      enable-multicast: true
      multicast-group: "224.2.2.3"
      multicast-port: 54327
      enable-tcp-ip: false
      tcp-ip-members:
        - "127.0.0.1"
        - "192.168.1.100"
      enable-management-center: false
      management-center-url: "http://localhost:8080/mancenter"
    
    general:
      default-provider: "caffeine"
      enable-cache-manager: true
      enable-cache-resolver: true
      enable-key-generator: true
      default-ttl: 1h
      enable-cache-eviction: true
      eviction-check-interval: 5m
      enable-cache-statistics: true
      enable-cache-metrics: true
      cache-ttls:
        "user-profile": 2h
        "product-catalog": 4h
        "order-status": 30m
        "session-data": 1h
        "api-response": 15m
    
    metrics:
      enabled: true
      enable-hit-rate: true
      enable-miss-rate: true
      enable-eviction-rate: true
      enable-load-time: true
      enable-size: true
      metrics-collection-interval: 30s
      enable-prometheus: true
      enable-micrometer: true

# Spring Cache configuration
spring:
  cache:
    type: caffeine
    cache-names:
      - "user-cache"
      - "product-cache"
      - "order-cache"
      - "session-cache"
      - "api-cache"
    
    caffeine:
      spec: "maximumSize=10000,expireAfterWrite=1h,expireAfterAccess=30m"
    
    redis:
      time-to-live: 1h
      cache-null-values: false
      use-key-prefix: true
      key-prefix: "my-base:"
      default-expiration: 1h

# Redis configuration (if using Redis)
spring:
  redis:
    host: localhost
    port: 6379
    password: "${REDIS_PASSWORD:}"
    database: 0
    timeout: 5s
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms
    cluster:
      nodes:
        - "localhost:7000"
        - "localhost:7001"
        - "localhost:7002"
      max-redirects: 3
    sentinel:
      master: mymaster
      nodes:
        - "localhost:26379"
        - "localhost:26380"
        - "localhost:26381"

# Logging configuration for cache operations
logging:
  level:
    com.mycompany.base.cache: DEBUG
    org.springframework.cache: DEBUG
    com.github.benmanes.caffeine: DEBUG
    io.lettuce.core: DEBUG
  
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Actuator configuration for cache monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,caches
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
    caches:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
        descriptions: true
        step: 30s
    cache:
      instrument: true
      metrics:
        enabled: true

# Cache-specific metrics
management:
  metrics:
    cache:
      instrument: true
      metrics:
        enabled: true
        cache-size: true
        hit-ratio: true
        miss-ratio: true
        eviction: true
        load-time: true
