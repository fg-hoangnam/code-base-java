# Security Configuration Example
# Copy this to your application.yml and customize as needed

my-base:
  security:
    authentication:
      enabled: true
      default-success-url: "/dashboard"
      default-failure-url: "/login?error"
      max-login-attempts: 5
      lockout-duration: 15m
      remember-me-enabled: true
      remember-me-validity: 30d
      password-encoder: "bcrypt"
      password-encoder-strength: 12
      require-password-change: false
      password-expiry: 90d
    
    authorization:
      enabled: true
      default-role: "USER"
      admin-roles:
        - "ADMIN"
        - "SUPER_ADMIN"
      public-endpoints:
        - "/public/**"
        - "/health/**"
        - "/actuator/**"
        - "/api/public/**"
      admin-endpoints:
        - "/admin/**"
        - "/management/**"
        - "/api/admin/**"
      method-security-enabled: true
      web-security-enabled: true
      csrf-enabled: true
      session-management-enabled: true
      max-sessions: 1
      prevent-login: false
    
    jwt:
      enabled: true
      secret: "${JWT_SECRET:your-super-secret-jwt-key-change-in-production}"
      access-token-validity: 30m
      refresh-token-validity: 7d
      issuer: "mycompany"
      audience: "mycompany-users"
      header-name: "Authorization"
      header-prefix: "Bearer "
      enable-refresh-token: true
      refresh-token-rotation-threshold: 3
    
    cors:
      enabled: true
      allowed-origins:
        - "http://localhost:3000"
        - "https://mycompany.com"
        - "https://app.mycompany.com"
      allowed-methods:
        - "GET"
        - "POST"
        - "PUT"
        - "DELETE"
        - "OPTIONS"
      allowed-headers:
        - "*"
      exposed-headers:
        - "Authorization"
        - "Content-Type"
        - "X-Requested-With"
      allow-credentials: true
      max-age: 1h
    
    rate-limit:
      enabled: true
      max-requests-per-minute: 100
      max-requests-per-hour: 1000
      max-requests-per-day: 10000
      window-size: 1m
      enable-ip-based-limiting: true
      enable-user-based-limiting: true
      excluded-paths:
        - "/health/**"
        - "/actuator/**"
        - "/public/**"
    
    audit:
      enabled: true
      log-login-attempts: true
      log-logout-events: true
      log-authorization-failures: true
      log-password-changes: true
      log-role-changes: true
      sensitive-operations:
        - "DELETE"
        - "UPDATE_ROLE"
        - "CHANGE_PASSWORD"
        - "GRANT_PERMISSION"
        - "REVOKE_PERMISSION"
      retention-period: 365d

# Spring Security specific configuration
spring:
  security:
    user:
      name: admin
      password: admin123
      roles: ADMIN
    
    # Additional Spring Security configuration
    oauth2:
      client:
        registration:
          google:
            client-id: "${GOOGLE_CLIENT_ID}"
            client-secret: "${GOOGLE_CLIENT_SECRET}"
            scope:
              - email
              - profile
    
    # Session management
    session:
      timeout: 30m
      create: always
      tracking-modes: cookie
    
    # Remember me
    remember-me:
      key: "${REMEMBER_ME_KEY:mycompany-remember-me-key}"
      token-validity-seconds: 2592000 # 30 days

# Logging configuration for security events
logging:
  level:
    com.mycompany.base.security: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web.filter.OncePerRequestFilter: DEBUG
  
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Actuator configuration for security monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,security
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
    security:
      enabled: true
  security:
    enabled: true
